Vagrant.configure("2") do |config|

  config.vm.provider "virtualbox" do |v|
    v.gui = true
  end

  config.vm.box = "debian/stretch64"
  config.vm.box_version = "9.2.0"
  if Vagrant.has_plugin?("vagrant-vbguest") then
    config.vbguest.auto_update = true
  end

  config.vm.provision "shell", inline: "hostnamectl set-hostname \"edr-stretch-$(date '+%F-%H-%M-%S').localdomain\" && printf \"127.0.0.1\t$(hostname)\n\" >> /etc/hosts"
  
  config.vm.provision "file", source: "linux-headers-4.9.0-4-amd64_4.9.65-3+deb9u1_amd64.deb", destination: "/tmp/linux-headers-4.9.0-4-amd64_4.9.65-3+deb9u1_amd64.deb"
  config.vm.provision "file", source: "linux-headers-4.9.0-4-common_4.9.65-3+deb9u1_all.deb", destination: "/tmp/linux-headers-4.9.0-4-common_4.9.65-3+deb9u1_all.deb"
  config.vm.provision :shell, path: "bootstrap.sh"
  config.vm.provision :shell, path: "configure_php.sh"

  config.vm.provision "file", source: "composer.json", destination: "/tmp/composer.json"
  config.vm.provision :shell, inline: "mv /tmp/composer.json /var/www/html/vulnerable_site/composer.json"
  config.vm.provision "file", source: "framework.yaml", destination: "/tmp/framework.yaml"

  config.vm.provision :shell, inline: "rm -f /etc/nginx/sites-enabled/default"
  config.vm.provision :shell, inline: "chown -R vagrant:vagrant /var/www/html/vulnerable_site"
  config.vm.provision :shell, inline: "curl -sS https://getcomposer.org/installer -o composer-setup.php && php composer-setup.php --install-dir=/usr/local/bin --filename=composer"
  config.vm.provision :shell, path: "configure.sh", privileged: false
  #config.vm.provision :shell, inline: "tar -xzf /tmp/vulnerable_site.tar.gz -C /var/www/html/vulnerable_site/", privileged: false

  config.vm.provision "file", source: "vulnerable_site.conf", destination: "/tmp/vulnerable_site.conf"
  config.vm.provision :shell, inline: "mv /tmp/vulnerable_site.conf /etc/nginx/sites-available/vulnerable_site.conf"
  config.vm.provision "shell", inline: "ln -s /etc/nginx/sites-available/vulnerable_site.conf /etc/nginx/sites-enabled/"
  config.vm.provision "file", source: "unserialize.php", destination: "/tmp/unserialize.php"
  config.vm.provision :shell, inline: "cp /tmp/unserialize.php /var/www/html/vulnerable_site/public/unserialize.php", privileged: false
  config.vm.provision "file", source: "cleanup.sh", destination: "/tmp/cleanup.sh"
  config.vm.provision :shell, inline: "cp /tmp/cleanup.sh /var/www/html/vulnerable_site/public/cleanup.sh && chmod +x /var/www/html/vulnerable_site/public/cleanup.sh", privileged: false

  config.vm.provision :shell, inline: "chown -R www-data:www-data /var/www/html/vulnerable_site"
  config.vm.provision :shell, inline: "service php7.4-fpm restart", privileged: true, run: "always"
  
  config.vm.provision "shell", inline: "systemctl restart nginx", privileged: true, run: "always"

  # Falcon
  #config.vm.provision "file", source: "falcon/falcon-sensor_6.32.0-12904_amd64.deb", destination: "/tmp/falcon-sensor_6.32.0-12904_amd64.deb"
  #config.vm.provision :shell, path: "falcon/falcon.sh"
  
  # Sentinal 1
  #config.vm.provision "file", source: "s1/SentinelAgent-linux-v21-10-3-3_linux_v21_10_3_3.deb", destination: "/tmp/SentinelAgent-linux-v21-10-3-3_linux_v21_10_3_3.deb"
  #config.vm.provision "file", source: "s1/s1.key", destination: "/tmp/s1.key"
  #config.vm.provision :shell, path: "s1/s1.sh"

  #MDE
  #config.vm.provision "file", source: "mde/MicrosoftDefenderATPOnboardingLinuxServer.py", destination: "/tmp/MicrosoftDefenderATPOnboardingLinuxServer.py"
  #config.vm.provision :shell, path: "mde/mde.sh"

  config.vm.network "forwarded_port", guest: 80, host: 8088
end